library(tidyverse)
library(readxl)
library(stringi)
library(factoextra)
library(ggrepel)
dados <- read_xlsx("produtividade_policial.xlsx")
dados %>%
sample_n(10)
dados <- dados %>%
rename_with(~ stri_trans_general(.x, "Latin-ASCII") %>%
tolower())
dados
dado %>%
group_by("regiao")
dados %>%
group_by("regiao")
dados <- read_xlsx("produtividade_policial.xlsx")
dados %>%
sample_n(10)
dados <- dados %>%
rename_with(~ stri_trans_general(.x, "Latin-ASCII") %>%
tolower())
# Renomear as colunas, removendo acentuação e convertendo para minúsculas
dados <- dados %>%
rename_with(~ stri_trans_general(.x, "Latin-ASCII") %>%
tolower())
# Transformar o dataframe de formato longo para formato largo
dados_largo <- dados %>%
pivot_wider(names_from = ocorrencia, values_from = total, values_fill = 0) %>%
group_by(regiao) %>%
summarise(across(everything(), sum, na.rm = TRUE))
# Visualizar o resultado
print(dados_largo)
# Transformar o dataframe de formato longo para formato largo
dados_largo <- dados %>%
pivot_wider(names_from = ocorrencia, values_from = total, values_fill = 0) %>%
group_by(regiao) %>%
summarise(across(everything(), sum, na.rm = TRUE))
# Visualizar o resultado
print(dados_largo)
dados <- read_xlsx("produtividade_policial.xlsx")
dados %>%
sample_n(10)
dados <- dados %>%
rename_with(~ stri_trans_general(.x, "Latin-ASCII") %>%
tolower())
dados <- dados %>%
pivot_wider(names_from = ocorrencia, values_from = total, values_fill = 0) %>%
group_by(regiao) %>%
summarise(across(everything(), sum, na.rm = TRUE))
dados <- dados %>%
select(-jan:dez)
print(dados)
dados <- dados %>%
pivot_wider(names_from = ocorrencia, values_from = total, values_fill = 0) %>%
group_by(regiao) %>%
summarise(across(everything(), sum, na.rm = TRUE))
dados <- read_xlsx("produtividade_policial.xlsx")
dados <- read_xlsx("produtividade_policial.xlsx")
dados %>%
sample_n(10)
dados <- dados %>%
rename_with(~ stri_trans_general(.x, "Latin-ASCII") %>%
tolower())
dados <- dados %>%
pivot_wider(names_from = ocorrencia, values_from = total, values_fill = 0) %>%
group_by(regiao) %>%
summarise(across(everything(), sum, na.rm = TRUE))
dados <- dados %>%
select(-jan:dez)
print(dados)
dados <- read_xlsx("produtividade_policial.xlsx")
dados %>%
sample_n(10)
dados <- dados %>%
rename_with(~ stri_trans_general(.x, "Latin-ASCII") %>%
tolower())
dados <- dados %>%
pivot_wider(names_from = ocorrencia, values_from = total, values_fill = 0) %>%
group_by(regiao) %>%
summarise(across(everything(), sum, na.rm = TRUE))
dados <- dados %>%
select(-jan, -fev, -mar, -abr, -mai, -jun, -jul, -ago, -set, -out, -nov, -dez)
print(dados)
dados_pca <- prcomp(dados_num, scale. = TRUE)
dados_pca <- prcomp(dados, scale. = TRUE)
dados_num <- dados %>% select(where(is.numeric))
dados_pca <- prcomp(dados_num, scale. = TRUE)
fviz_eig(pca, addlabels = TRUE, ncp = ncol(dados_num)) +
labs(x = "Componente Principal", y = "Percentual de Variância Explicada")
fviz_eig(dados_pca, addlabels = TRUE, ncp = ncol(dados_num)) +
labs(x = "Componente Principal", y = "Percentual de Variância Explicada")
variancia_acumulada <- cumsum(pca$sdev^2 / sum(pca$sdev^2))
variancia_acumulada <- cumsum(dados_pca$sdev^2 / sum(pca$sdev^2))
variancia_acumulada <- cumsum(dados_pca$sdev^2 / sum(dados_pca$sdev^2))
variancia_acumulada
dados_pca %>%
fviz_contrib(choice = "var", axes = 3, sort.val = "asc",
fill = "steelblue", color = "black") +
labs(x = "", title = "Contribuicoes das questoes para o primeiro driver") +
coord_flip()
dados_num <- dados %>% select(where(is.numeric))
dados_pca <- prcomp(dados_num, scale. = TRUE)
fviz_eig(dados_pca, addlabels = TRUE, ncp = ncol(dados_num)) +
labs(x = "Componente Principal", y = "Percentual de Variância Explicada")
variancia_acumulada <- cumsum(dados_pca$sdev^2 / sum(dados_pca$sdev^2))
variancia_acumulada
#como podemos notar teremos mais de 80% da variancia dos dados a partir de duas colunes do dataframe reduzido
dados_pca %>%
fviz_contrib(choice = "var", axes = 3, sort.val = "asc",
fill = "steelblue", color = "black") +
labs(x = "") +
coord_flip()
contribuicoes_df <- tibble(
Variavel = names(contribuicoes),
Contribuicao = contribuicoes
) %>%
arrange(desc(Contribuicao))
# #3 ----------------------------------------------------------------------
contribuicoes <- 100 * (cargas^2) / sum(cargas^2)
contribuicoes_df <- tibble(
Variavel = names(contribuicoes),
Contribuicao = contribuicoes
) %>%
arrange(desc(Contribuicao))
# #3 ----------------------------------------------------------------------
cargas <- pca$rotation[, 1]
carga
# #3 ----------------------------------------------------------------------
cargas <- dados_pca$rotation[, 1]
carga
# #3 ----------------------------------------------------------------------
cargas <- dados_pca$rotation[, 1]
cargas
contribuicoes <- 100 * (cargas^2) / sum(cargas^2)
contribuicoes_df <- tibble(
Variavel = names(contribuicoes),
Contribuicao = contribuicoes
) %>%
arrange(desc(Contribuicao))
View(contribuicoes_df)
print(contribuicoes_df)
fviz_contrib(pca, choice = "var", axes = 1, top = 10) +
labs(title = "Contribuições das Variáveis para a Primeira Componente Principal")
fviz_contrib(dados_pca, choice = "var", axes = 1, top = 10) +
labs(title = "Contribuições das Variáveis para a Primeira Componente Principal")
cargas2 <- dados_pca$rotation[,2]
contribuicoes_segunda <- 100 * (cargas_segunda^2) / sum(cargas_segunda^2)
cargas_segunda <- dados_pca$rotation[,2]
contribuicoes_segunda <- 100 * (cargas_segunda^2) / sum(cargas_segunda^2)
contribuicoes_segunda_df <- tibble(
Variavel = names(contribuicoes_segunda),
Contribuicao = contribuicoes_segunda
) %>%
arrange(desc(Contribuicao))
# Visualizar as contribuições para a segunda componente
print(contribuicoes_segunda_df)
# Visualizar graficamente as contribuições para facilitar a interpretação
fviz_contrib(pca, choice = "var", axes = 2, top = 10) +
labs(title = "Contribuições das Variáveis para a Segunda Componente Principal")
# Visualizar graficamente as contribuições para facilitar a interpretação
fviz_contrib(dados_pca, choice = "var", axes = 2, top = 10) +
labs(title = "Contribuições das Variáveis para a Segunda Componente Principal")
scores <- as_tibble(dados_pca$x) %>%
select(PC1, PC2) %>%
mutate(Regiao = dados$regiao)
scores <- as_tibble(dados_pca$x) %>%
select(PC1, PC2) %>%
mutate(Regiao = dados$regiao)
colnames(scores) <- c("Repressão Policial", "Crimes com armas e drogas", "Regiao")
colnames(scores) <- c("Repressão Policial", "Crimes com armas e drogas", "Regiao")
ggplot(scores, aes(x = `Atividade Policial de Repressão`, y = `Incidência de Crimes Relacionados a Drogas e Armas`, label = Regiao)) +
geom_point(aes(color = Regiao), size = 3) +
geom_text_repel() +
labs(title = "Distribuição das Regiões nas Duas Primeiras Componentes Principais",
x = "Atividade Policial de Repressão",
y = "Incidência de Crimes Relacionados a Drogas e Armas") +
theme_minimal()
ggplot(scores, aes(x = `Atividade Policial de Repressão`, y = `Incidência de Crimes Relacionados a Drogas e Armas`, label = Regiao)) +
geom_point(aes(color = Regiao), size = 3) +
geom_text_repel() +
labs(title = "Distribuição das Regiões nas Duas Primeiras Componentes Principais",
x = "Repressão Policial",
y = "Crimes com armas e drogas") +
theme_minimal()
ggplot(scores, aes(x = `Repressão Policial`, y = `Crimes com armas e drogas`, label = Regiao)) +
geom_point(aes(color = Regiao), size = 3) +
geom_text_repel() +
labs(title = "Distribuição das Regiões nas Duas Primeiras Componentes Principais",
x = "Repressão Policial",
y = "Crimes com armas e drogas") +
theme_minimal()
dados_kmeans <- scores %>% select(`Repressão Policial`, `Crimes com armas e drogas`)
num_clusters <- 1:10
fviz_nbclust(dados_kmeans, kmeans, method = "wss") +
labs(title = "Método do Cotovelo para Identificar o Número Ótimo de Clusters",
x = "Número de Clusters",
y = "Soma das Distâncias Quadradas (Within Sum of Squares)")
fviz_nbclust(dados_kmeans, kmeans, method = "wss") +
labs(title = "Método do Cotovelo",
x = "Número de Clusters",
y = "Soma das Distâncias Quadradas")
fviz_nbclust(dados_kmeans, kmeans, method = "wss") +
labs(title = "Método do Cotovelo para ver numero otimo Clusters",
x = "Número de Clusters",
y = "Soma das Distâncias Quadradas")
scores <- scores %>%
mutate(Cluster = as.factor(kmeans_result$cluster))
kmeans_result <- kmeans(dados_kmeans, centers = k, nstart = 25)
#6.2
k<-7
kmeans_result <- kmeans(dados_kmeans, centers = k, nstart = 25)
scores <- scores %>%
mutate(Cluster = as.factor(kmeans_result$cluster))
ggplot(scores, aes(x = `Repressão Policial`, y = `Crimes com armas e drogas`, color = Cluster, label = Regiao)) +
geom_point(size = 3) +
geom_text_repel() +
labs(title = "Distribuição das Regiões nas Duas Primeiras Componentes Principais com Clusters",
x = "Repressão Policial",
y = "Crimes com armas e drogas") +
theme_minimal() +
scale_color_manual(values = rainbow(k))
k<-3
# notamos com o grafico que 7 foi um valor muito alto, entao reduzimos para 3
kmeans_result <- kmeans(dados_kmeans, centers = k, nstart = 25)
scores <- scores %>%
mutate(Cluster = as.factor(kmeans_result$cluster))
ggplot(scores, aes(x = `Repressão Policial`, y = `Crimes com armas e drogas`, color = Cluster, label = Regiao)) +
geom_point(size = 3) +
geom_text_repel() +
labs(title = "Distribuição das Regiões nas Duas Primeiras Componentes Principais com Clusters",
x = "Repressão Policial",
y = "Crimes com armas e drogas") +
theme_minimal() +
scale_color_manual(values = rainbow(k))
<-4
k<-4
# notamos com o grafico que 7 foi um valor muito alto, entao reduzimos para 3
kmeans_result <- kmeans(dados_kmeans, centers = k, nstart = 25)
scores <- scores %>%
mutate(Cluster = as.factor(kmeans_result$cluster))
ggplot(scores, aes(x = `Repressão Policial`, y = `Crimes com armas e drogas`, color = Cluster, label = Regiao)) +
geom_point(size = 3) +
geom_text_repel() +
labs(title = "Distribuição das Regiões nas Duas Primeiras Componentes Principais com Clusters",
x = "Repressão Policial",
y = "Crimes com armas e drogas") +
theme_minimal() +
scale_color_manual(values = rainbow(k))
---
title: "Análise de Produtividade Policial"
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(readxl)
library(stringi)
library(factoextra)
library(ggrepel)
dados %>%
sample_n(10)
dados <- dados %>%
rename_with(~ stri_trans_general(.x, "Latin-ASCII") %>%
tolower())
dados <- dados %>%
pivot_wider(names_from = ocorrencia, values_from = total, values_fill = 0) %>%
group_by(regiao) %>%
summarise(across(everything(), sum, na.rm = TRUE))
dados <- read_xlsx("produtividade_policial.xlsx")
dados %>%
sample_n(10)
dados <- dados %>%
rename_with(~ stri_trans_general(.x, "Latin-ASCII") %>%
tolower())
dados
dados <- dados %>%
pivot_wider(names_from = ocorrencia, values_from = total, values_fill = 0) %>%
group_by(regiao) %>%
summarise(across(everything(), sum, na.rm = TRUE))
dados <- dados %>%
select(-jan, -fev, -mar, -abr, -mai, -jun, -jul, -ago, -set, -out, -nov, -dez)
print(dados)
dados_pca <- prcomp(dados_num, scale. = TRUE)
fviz_eig(dados_pca, addlabels = TRUE, ncp = ncol(dados_num)) +
labs(x = "Componente Principal", y = "Percentual de Variância Explicada")
variancia_acumulada <- cumsum(dados_pca$sdev^2 / sum(dados_pca$sdev^2))
variancia_acumulada
fviz_eig(dados_pca, addlabels = TRUE, ncp = ncol(dados_num)) +
labs(x = "Componente Principal", y = "Percentual de Variância Explicada")
variancia_acumulada <- cumsum(dados_pca$sdev^2 / sum(dados_pca$sdev^2))
variancia_acumulada
cargas <- dados_pca$rotation[, 1]
contribuicoes <- 100 * (cargas^2) / sum(cargas^2)
contribuicoes_df <- tibble(
Variavel = names(contribuicoes),
Contribuicao = contribuicoes
) %>%
arrange(desc(Contribuicao))
print(contribuicoes_df)
fviz_contrib(dados_pca, choice = "var", axes = 1, top = 10) +
labs(title = "Primeira Componente Principal")
cargas_segunda <- dados_pca$rotation[,2]
cargas_segunda <- dados_pca$rotation[,2]
contribuicoes_segunda <- 100 * (cargas_segunda^2) / sum(cargas_segunda^2)
contribuicoes_segunda_df <- tibble(
Variavel = names(contribuicoes_segunda),
Contribuicao = contribuicoes_segunda
) %>%
arrange(desc(Contribuicao))
print(contribuicoes_segunda_df)
fviz_contrib(dados_pca, choice = "var", axes = 2, top = 10) +
labs(title = "Segunda Componente Principal")
fviz_contrib(dados_pca, choice = "var", axes = 2, top = 10) +
labs(title = "Segunda Componente Principal")
```
scores <- as_tibble(dados_pca$x) %>%
select(PC1, PC2) %>%
mutate(Regiao = dados$regiao)
colnames(scores) <- c("Repressão Policial", "Crimes com armas e drogas", "Regiao")
ggplot(scores, aes(x = `Repressão Policial`, y = `Crimes com armas e drogas`, label = Regiao)) +
geom_point(aes(color = Regiao), size = 3) +
geom_text_repel() +
labs(title = "Distribuição das Regiões nas Duas Primeiras Componentes Principais",
x = "Repressão Policial",
y = "Crimes com armas e drogas") +
theme_minimal()
#6.1
set.seed(123)
dados_kmeans <- scores %>% select(`Repressão Policial`, `Crimes com armas e drogas`)
num_clusters <- 1:10
fviz_nbclust(dados_kmeans, kmeans, method = "wss") +
labs(title = "Método do Cotovelo para ver numero otimo Clusters",
x = "Número de Clusters",
y = "Soma das Distâncias Quadradas")
#6.2
k<-4
# notamos com o grafico que 7 foi um valor muito alto, entao reduzimos para 4
kmeans_result <- kmeans(dados_kmeans, centers = k, nstart = 25)
scores <- scores %>%
mutate(Cluster = as.factor(kmeans_result$cluster))
ggplot(scores, aes(x = `Repressão Policial`, y = `Crimes com armas e drogas`, color = Cluster, label = Regiao)) +
geom_point(size = 3) +
geom_text_repel() +
labs(title = "Distribuição das Regiões nas Duas Primeiras Componentes Principais com Clusters",
x = "Repressão Policial",
y = "Crimes com armas e drogas") +
theme_minimal() +
scale_color_manual(values = rainbow(k))
ggplot(scores, aes(x = `Repressão Policial`, y = `Crimes com armas e drogas`, color = Cluster, label = Regiao)) +
geom_point(size = 3) +
geom_text_repel() +
labs(title = "Distribuição das Regiões nas Duas Primeiras Componentes Principais com Clusters",
x = "Repressão Policial",
y = "Crimes com armas e drogas") +
theme_minimal() +
scale_color_manual(values = rainbow(k))
#6.3
# Podemos notar que os 4 grupos gerados, se diferenciam principalmente entre os com alta repressao e alta cirminalidade (2),
# baixa criminalidade e baixa repressão(1), e os que possuem um valor intermediario de ambas (3,4)
print(ncol(dados_pca$x))
colnames(dados_pca$x)[1:2] <- c("Repressão Policial", "Crimes com armas e drogas")
print(ncol(dados_pca$x))
print(ncol(dados_pca$x))
colnames(dados_pca$x)[1:2] <- c("Repressão Policial", "Crimes com armas e drogas")
scores <- as_tibble(dados_pca$x) %>%
select(PC1, PC2) %>%
mutate(Regiao = dados$regiao)
print(ncol(dados_pca$x))
colnames(dados_pca$x) <- c("Repressão Policial", "Crimes com armas e drogas")
print(ncol(dados_pca$x))
colnames(dados_pca$x)[1:2] <- c("Repressão Policial", "Crimes com armas e drogas")
scores <- as_tibble(dados_pca$x) %>%
select(PC1, PC2) %>%
mutate(Regiao = dados$regiao)
as_tibble(dados_pca$x)
print(ncol(dados_pca$x))
colnames(dados_pca$x)[1:2] <- c("Repressão Policial", "Crimes com armas e drogas")
scores <- as_tibble(dados_pca$x) %>%
select(`Repressão Policial`, `Crimes com armas e drogas`) %>%
mutate(Regiao = dados$regiao)
colnames(scores) <- c("Repressão Policial", "Crimes com armas e drogas", "Regiao")
ggplot(scores, aes(x = `Repressão Policial`, y = `Crimes com armas e drogas`, label = Regiao)) +
geom_point(aes(color = Regiao), size = 3) +
geom_text_repel() +
labs(title = "Distribuição das Regiões nas Duas Primeiras Componentes Principais",
x = "Repressão Policial",
y = "Crimes com armas e drogas") +
theme_minimal()
